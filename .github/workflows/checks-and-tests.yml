name: Checks and Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  python-tests:
    name: Python Checks and Tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      # Authenticating with Dockerhub ensures image pulls are authenticated, so not as severely rate limited
      - name: Log in to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Also log docker in to GCP artifact registry, to allow image pulls from our private registries
      - name: Log in to Google Docker Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west2-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv install --dev --deploy

      - name: Run Tests and Checks
        run: make test

      - name: Check Docker Build
        run: make build-ddl-docker

      - name: Run Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # NB: fail_ci_if_error is enabled to make any teething issues with Codecov visible.
          # If Codecov has outage issues in the future, this can be toggled to false to allow the action to pass.
          fail_ci_if_error: true


  patches-tests:
    name: Test DDL Patches
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      # Authenticating with Dockerhub ensures image pulls are authenticated, so not as severely rate limited
      - name: Log in to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Also log docker in to GCP artifact registry, to allow image pulls from our private registries
      - name: Log in to Google Docker Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west2-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set up Python "3.10"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip pipenv
          pipenv install --dev --deploy

      - name: Run Tests and Checks
        run: make test-patches


  ddl-java-checks:
    name: DDL Java Checks
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Maven Checks
        run: make check-ddl


  common-entities-java-checks:
    name: Common Entities Java Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ssdc-rm-common-entity-model
    steps:

      - name: Checkout
        uses: actions/checkout@v3
          
      # Google auth allows maven to pull artifacts from our registry
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
#          cache: maven

      - name: Maven Checks
        run: make format-check

      - name: Run Build
        run: make build


  check-ddl-changes:
    name: Check For Un-Built DDL Changes
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
#          cache: maven

      - name: Check For Un-Built Entity Changes
        run: ./check-for-unbuilt-entity-changes.sh


  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Shellcheck
        run: make shellcheck
